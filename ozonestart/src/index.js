'use strict';

// —á–µ–∫—Å–±–æ–∫—Å –ê–ö–¶–ò–Ø
function toggleCheckbox() {

    const checkbox = document.getElementById('discount-checkbox'); // —á–µ–∫–±–æ–∫—Å input –ê–ö–¶–ò–Ø

    checkbox.addEventListener('change', function () {

        if (this.checked) {

            // —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ –≤–µ—Ä—Å—Ç–∫–µ
            this.nextElementSibling.classList.add('checked'); // –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–∞—Å—Å –¥–ª—è –ø—Ç–∏—á–∫–∏
        } else {
            this.nextElementSibling.classList.remove('checked'); // —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø—Ç–∏—á–∫–∏
        }

    });

}
// end —á–µ–∫–±–æ–∫—Å –ê–ö–¶–ò–Ø





    //–∫–æ—Ä–∑–∏–Ω–∞
     
    // –ø–æ—è–≤–ª–µ–Ω–∏–µ –∏ –∏—Å—á–µ–∑–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    function toggleCart() {
    const btnCart = document.getElementById('cart');  // —Ä–∏—Å—É–Ω–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã –≤–≤–µ—Ä—Ö—É (–≤–∏–¥–µ–Ω)
    const modalCart = document.querySelector('.cart');  // –∫–æ—Ä–∑–∏–Ω–∞ –≤–Ω–∏–∑—É (—Å–∫—Ä—ã—Ç–∞)
    const closeBtn = document.querySelector('.cart-close'); // –∫—Ä–µ—Å—Ç–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–æ—Ä–∑–∏–Ω—ã


    //–≤–µ—à–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    btnCart.addEventListener('click', function () {
        modalCart.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });

    // –≤–µ—à–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –∏—Å—á–µ–∑–∞–Ω–∏–µ –∫–æ—Ä–∑–Ω—ã
    closeBtn.addEventListener('click', function () {
        modalCart.style.display = 'none';
        document.body.style.overflow = 'none';
    });
    }

//end –∫–æ—Ä–∑–∏–Ω–∞





//—Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π
    

// —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    function addCart() {

    const cards = document.querySelectorAll('.goods .card');  // –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    const CartWrapper = document.querySelector('.cart-wrapper'); //–º–µ—Å—Ç–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø–æ–¥ –∫–∞—Ä—Ç–æ—á–∫–∏-–∫–ª–æ–Ω—ã
    const CartEmpty = document.getElementById('cart-empty');  //—Ç–µ–∫—Å—Ç —Å –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–æ–π
    const countGoots = document.querySelector('.counter'); // —á–∏—Å–ª–æ –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    


    //  –≤–µ—à–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫  
    cards.forEach(function (card) {
        const btn = card.querySelector('button');
        btn.addEventListener('click', function () {
          
            // —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏-–∫–ª–æ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ, 
            const cardClone = card.cloneNode(true);
            CartWrapper.appendChild(cardClone);
            showData();

            //–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–∞—Ä—Ç–æ—á–∫–∏-–∫–ª–æ–Ω–∞  –≤ –∫–æ—Ä–∑–∏–Ω–µ
            const removeBtn = cardClone.querySelector('.btn');
            removeBtn.textContent = '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã';
            removeBtn.addEventListener('click', () => {
            cardClone.remove();
            showData();
            });
        });
    });



    // –ø–æ–¥—Å—á–µ—Ç  –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    function showData() {
        const cardsCard = CartWrapper.querySelectorAll('.card'); // –º–∞—Å—Å–∏–≤ –∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤
        const cardsPrice = CartWrapper.querySelectorAll('.card-price'); //  –º–∞—Å—Å–∏–≤ —Ü–µ–Ω –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤ 
        const cardTotal = document.querySelector('.cart-total span'); // –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤
        let sum = 0; //  –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±—â–µ–π —Ü–µ–Ω—ã –≤  –∫–æ—Ä–∑–∏–Ω–µ
        countGoots.textContent = cardsCard.length; //–¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏-–∫–ª–æ–Ω–∞–º–∏


        // —Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫-–∫–ª–æ–Ω–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
        cardsPrice.forEach((cardPrice) => {
            let price = parseFloat(cardPrice.textContent);
            sum += price;
            });

        cardTotal.textContent = sum; //–∑–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Ü–µ–Ω–æ–π


         // –ø–æ—è–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ
                if (cardsCard.length !== 0) {
                        CartEmpty.remove();
                    } 
                else {   CartWrapper.appendChild(CartEmpty);
                    }
       
    }
}
//end —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π






//—Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏ –∏ –ø–æ–∏—Å–∫

    // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞
    function actionPage() {
    
    const cards = document.querySelectorAll('.goods .card'); // –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const discountCheckbox = document.getElementById('discount-checkbox'); // —á–µ–∫–±–æ–∫—Å –ê–ö–¶–ò–Ø
    const goods = document.querySelector('.goods');
    let min = document.getElementById('min');  // input –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
    let max = document.getElementById('max'); //input –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
     
    const search = document.querySelector('.search-wrapper_input'); // —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞
    const searchBtn = document.querySelector('.search-btn');  // –∫–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞





    // —Ñ–∏–ª—å—Ç—Ä –ø–æ –∞–∫—Ü–∏–∏
    discountCheckbox.addEventListener('click', () => {

        // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        cards.forEach((card) => {
           
                if(discountCheckbox.checked) {

                    // –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ card-sale –≤ –∫–∞—Ä—Ç–æ—á–∫–µ
                    if(!card.querySelector('.card-sale')) {
                            card.parentNode.style.display = 'none'; // —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Ä–æ–¥–∏—Ç–µ–ª—è
                        }

                }
                else { 
                    card.parentNode.style.display = ''; // –ø–æ—è–≤–ª—è—é—Ç—Å—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Å–µ
               
                }
        });

    });


      // —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
      min.addEventListener('change', filterPrice);
      max.addEventListener('change', filterPrice);

        function filterPrice(){
                cards.forEach((card) =>{
                    const cardPrice = card.querySelector('.card-price'); // –Ω–∞—Ö–æ–¥–∏–º —Ü–µ–Ω—É –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                    const price = parseFloat(cardPrice.textContent); // –æ—Ç—Å–µ–∏–≤–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏ –ø—Ä–æ–±–µ–ª—ã

                    if (( min.value && price < min.value) || ( max.value && price > max.value))
                
                     {
                        card.parentNode.remove();
                    } 
                    else { 
                        goods.appendChild(card.parentNode); 
                    }
                });
        }

      
        // –ø–æ–∏—Å–∫
        searchBtn.addEventListener('click', function(){
            
            const searchText =  new RegExp(search.value.trim(), 'i' );// –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è + —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
            cards.forEach((card) => {
                const title = card.querySelector('.card-title');
                if(!searchText.test(title.textContent)) {
                    card.parentNode.style.display = 'none' ;
                }
                else {
                    card.parentNode.style.display = '' ;
                }
                search.value = '';
            });
            // console.log(searchText);

        });
    
}
//end —Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏

// –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞

function getData() {
    const goodsWrapper = document.querySelector('.goods');
            return fetch('../db/db.json')
            .then((response)=> {
        
            if(response.ok){
                return response.json();
            }
            else {
                throw new Error ('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞: ' + response.status);
            }
        })

        .then((data) => {
            return data;
        })

        .catch((err) => {
            // console.warn(err);
            goodsWrapper.innerHTML = '<div style="color: red; font-size: 5rem;">–£—Ä—Å —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</div>';
        });


}
// –≤—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
function renderCards(data) {
    const goodsWrapper  = document.querySelector('.goods');
    data.goods.forEach((good) => {
        const card = document.createElement('div');
        card.className = 'col-12 col-md-6 col-lg-4 col-xl-3';
        card.innerHTML = `
                      
                       <div class="card" data-category="${good.category}">
                       ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''}
                       
                           <div class="card-img-wrapper">
                             <span class="card-img-top"
                                 style="background-image: url('${good.img}')"></span>
                         </div>
                         <div class="card-body justify-content-between">
                             <div class="card-price" style="${good.sale ? 'color: red' : '  '}">${good.price } ‚ÇΩ </div>
                             <h5 class="card-title">${good.title}</h5>
                             <button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                         </div>
                        </div>
                
        `;
        goodsWrapper.appendChild(card);
    });
}
//-- end  –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞


function renderCatalog(){
    const cards = document.querySelectorAll('.goods .card'); // –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–º
    const catalogList = document.querySelector('.catalog-list'); // ul –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–∞–ª–æ–≥
    const catalogWrapper = document.querySelector('.catalog'); //  —Å–∞–º –∫–∞—Ç–∞–ª–æ–≥ –≤ –Ω–µ–º –ª–µ–∂–∏—Ç ul
    const catalogBtn = document.querySelector('.catalog-button'); //  —Å–∞–º–∞ –∫–Ω–æ–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥
    const categories = new Set(); // —Ö—Ä–∞–Ω–∏—Ç –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω
    cards.forEach((card) =>{
        categories.add(card.dataset.category);
    });
    categories.forEach((item)=> {
        const li = document.createElement('li');
        li.textContent = item;
        catalogList.appendChild(li);
    });
   

    catalogBtn.addEventListener('click', (event)=> {

        
        if(catalogWrapper.style.display ){
            catalogWrapper.style.display =  '' ; 
            console.log(true);
        }
        else { 
            console.log(false);
            catalogWrapper.style.display = 'block';
    }
      
        if(event.target.tagName === 'LI') {
              cards.forEach((card)=>{

                if(card.dataset.category  === event.target.textContent) {
                    card.parentNode.style.display = '';
                }
                else {
                    card.parentNode.style.display = ' none ';
                }
        });
         }

    });

      
    // console.log(categories);
}



getData().then((data) =>{
    renderCards(data);
    toggleCheckbox();
    toggleCart();
    addCart();
    actionPage();
    renderCatalog();
});

